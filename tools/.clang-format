---
# See https://releases.llvm.org/14.0.0/tools/clang/docs/ClangFormatStyleOptions.html
# General settings to align with C++ Core Guidelines
BasedOnStyle: Google  # Google style guide is often close to modern C++ practices
IndentWidth: 4        # C++ guidelines often recommend 4 spaces for indentation
TabWidth: 4           # Use 4 spaces per tab stop
UseTab: Never         # Prefer spaces over tabs (as per Core Guidelines)
Language:        Cpp

# Line Length (typically 80 or 100)
ColumnLimit: 100

# Formatting control for braces
BraceWrapping:
  AfterClass: true
  AfterFunction: true
  AfterStruct: true
  AfterNamespace: true
  BeforeElse: true
  BeforeCatch: true

# Allow {} in one line if {} is empty
AllowShortBlocksOnASingleLine: Empty

# 
BreakConstructorInitializers : BeforeColon 

# Empty line before acces modifier like private, public
EmptyLineBeforeAccessModifier: LogicalBlock
IndentAccessModifiers: true
ShortNamespaceLines: 15
NamespaceIndentation: All 

# Aligning parameters and arguments
AlignConsecutiveAssignments: true
AlignConsecutiveDeclarations: false

# Pointer and reference style (modern C++ tends to use spaces for clarity)
PointerAlignment: Left  # Align pointers to the left (e.g., int* p; instead of int *p;)
ReferenceAlignment: Left # Align references to the left (e.g., int& r; instead of int &r;)

# Indentation for blocks (i.e., inside classes or functions)
IndentCaseBlocks: true
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true

# Formatting for comments
CommentPragmas: '^pragma'
SortIncludes: true       # Sort includes in alphabetical order
IncludeBlocks: Preserve  # Preserve the order of includes within blocks

# Spacing
SpaceBeforeParens: ControlStatements  # No space before parentheses in control statements (if, for, while)
SpaceAfterCStyleCast: true           # Space after casting (int *x = (int *)ptr;)
SpaceAfterTemplateKeyword: true      # Space after template keyword (e.g., template <typename T>)

# Function call parameters
SpacesInParentheses: false   # No spaces in function call parentheses (e.g., foo(bar);)

# Bracing style for functions and classes
Cpp11BracedListStyle: true   # Use braced initialization style in C++11 and beyond

SortUsingDeclarations: true  # Sort `using` declarations

# Allow short blocks to be on one line (for constructors and functions)
AllowShortFunctionsOnASingleLine: Inline

...

